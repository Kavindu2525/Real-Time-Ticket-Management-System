{"ast":null,"code":"import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\nclass WebSocketService {\n  constructor(url, onMessageCallback, onErrorCallback) {\n    this.url = url;\n    this.onMessageCallback = onMessageCallback;\n    this.onErrorCallback = onErrorCallback;\n    this.client = null;\n    this.subscriptions = {};\n  }\n  connect() {\n    try {\n      this.client = new Client({\n        webSocketFactory: () => new SockJS(this.url),\n        debug: str => {\n          console.log(str);\n        },\n        reconnectDelay: 5000,\n        heartbeatIncoming: 4000,\n        heartbeatOutgoing: 4000,\n        onStompError: frame => {\n          console.error('STOMP error:', frame);\n          if (this.onErrorCallback) {\n            this.onErrorCallback(frame);\n          }\n        }\n      });\n      this.client.onConnect = () => {\n        console.log('Connected to WebSocket');\n        this.subscribeToTopics();\n      };\n      this.client.activate();\n    } catch (error) {\n      console.error('WebSocket connection error:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    }\n  }\n  subscribeToTopics() {\n    try {\n      // Subscribe to logs\n      this.subscriptions['logs'] = this.client.subscribe('/topic/logs', message => {\n        const data = message.body ? JSON.parse(message.body) : null;\n        this.onMessageCallback('logs', data);\n      });\n\n      // Subscribe to ticket availability\n      this.subscriptions['ticket-availability'] = this.client.subscribe('/topic/ticket-availability', message => {\n        const data = message.body ? JSON.parse(message.body) : null;\n        this.onMessageCallback('ticket-availability', data);\n      });\n    } catch (error) {\n      console.error('Error subscribing to topics:', error);\n      if (this.onErrorCallback) {\n        this.onErrorCallback(error);\n      }\n    }\n  }\n  disconnect() {\n    if (this.client) {\n      Object.values(this.subscriptions).forEach(sub => {\n        try {\n          sub.unsubscribe();\n        } catch (error) {\n          console.error('Error unsubscribing:', error);\n        }\n      });\n      this.client.deactivate();\n      console.log('WebSocket disconnected');\n    }\n  }\n}\nexport default WebSocketService;","map":{"version":3,"names":["Client","SockJS","WebSocketService","constructor","url","onMessageCallback","onErrorCallback","client","subscriptions","connect","webSocketFactory","debug","str","console","log","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onStompError","frame","error","onConnect","subscribeToTopics","activate","subscribe","message","data","body","JSON","parse","disconnect","Object","values","forEach","sub","unsubscribe","deactivate"],"sources":["/home/project/FrontEnd/src/services/WebSocketService.js"],"sourcesContent":["import { Client } from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nclass WebSocketService {\n    constructor(url, onMessageCallback, onErrorCallback) {\n        this.url = url;\n        this.onMessageCallback = onMessageCallback;\n        this.onErrorCallback = onErrorCallback;\n        this.client = null;\n        this.subscriptions = {};\n    }\n\n    connect() {\n        try {\n            this.client = new Client({\n                webSocketFactory: () => new SockJS(this.url),\n                debug: (str) => {\n                    console.log(str);\n                },\n                reconnectDelay: 5000,\n                heartbeatIncoming: 4000,\n                heartbeatOutgoing: 4000,\n                onStompError: (frame) => {\n                    console.error('STOMP error:', frame);\n                    if (this.onErrorCallback) {\n                        this.onErrorCallback(frame);\n                    }\n                }\n            });\n\n            this.client.onConnect = () => {\n                console.log('Connected to WebSocket');\n                this.subscribeToTopics();\n            };\n\n            this.client.activate();\n        } catch (error) {\n            console.error('WebSocket connection error:', error);\n            if (this.onErrorCallback) {\n                this.onErrorCallback(error);\n            }\n        }\n    }\n\n    subscribeToTopics() {\n        try {\n            // Subscribe to logs\n            this.subscriptions['logs'] = this.client.subscribe('/topic/logs', (message) => {\n                const data = message.body ? JSON.parse(message.body) : null;\n                this.onMessageCallback('logs', data);\n            });\n\n            // Subscribe to ticket availability\n            this.subscriptions['ticket-availability'] = this.client.subscribe('/topic/ticket-availability', (message) => {\n                const data = message.body ? JSON.parse(message.body) : null;\n                this.onMessageCallback('ticket-availability', data);\n            });\n        } catch (error) {\n            console.error('Error subscribing to topics:', error);\n            if (this.onErrorCallback) {\n                this.onErrorCallback(error);\n            }\n        }\n    }\n\n    disconnect() {\n        if (this.client) {\n            Object.values(this.subscriptions).forEach(sub => {\n                try {\n                    sub.unsubscribe();\n                } catch (error) {\n                    console.error('Error unsubscribing:', error);\n                }\n            });\n            this.client.deactivate();\n            console.log('WebSocket disconnected');\n        }\n    }\n}\n\nexport default WebSocketService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}